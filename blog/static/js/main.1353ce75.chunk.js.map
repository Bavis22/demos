{"version":3,"sources":["components/general/Card.js","components/general/Icon.js","components/general/DetailRow.js","components/general/Tappable.js","components/general/ErrorLayout.js","components/general/Header.js","components/hoc/lifecycle.js","components/general/LoadingLayout.js","components/hoc/mobxify.js","components/general/PageMeta.js","utils/config.js","api/utils.js","api/posts.js","models/user.js","api/users.js","stores/usersStore.js","pages/home/HomePage.js","api/comments.js","models/post.js","stores/postsStore.js","pages/post/PostPage.js","stores/index.js","pages/user/Pagination.js","pages/user/UserPage.js","App.js","utils/stickyHover.js","index.js"],"names":["Card","_ref","className","square","remainingProps","Object","objectWithoutProperties","react_default","a","createElement","assign","classNames","is-square","defineProperty","Icon","name","React","children","DetailRow","icon","title","general_Icon","Tappable","component","disabled","objectSpread","ErrorLayout","message","retryLabel","retryFn","general_Tappable","onClick","defaultProps","Header","backTo","Link","to","lifecycle","hooks","BaseComponent","WrapperComponent","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","Component","forOwn","v","k","prototype","LoadingLayout","mobxify","compose","inject","observer","siteName","ogProperties","PageMeta","metaProps","meta","site_name","Helmet","description","content","map","property","index","config","API_BASE_URL","PAGE_LIMIT","apiEndpoint","path","params","concat","join","searchParams","parseJsonResponse","_x","_parseJsonResponse","_callee","response","json","error","regenerator_default","wrap","_context","prev","next","sent","t0","ok","abrupt","Error","statusText","isFromServer","responseJson","stop","apiRequest","_x2","_x3","_apiRequest","_callee2","method","body","options","defaultHeaders","defaultOptions","headers","remainingOptions","finalOptions","_args2","_context2","length","undefined","Accept","Content-Type","JSON","stringify","fetch","posts","delete","id","get","getList","userId","skip","pageNum","getSkip","limit","User","isLoading","loadError","needsReset","pages","observable","load","flow","mark","clear","postsApi","set","data","decorate","computed","isPageLoaded","setNeedsReset","action","users","UsersStore","list","usersApi","user","isLoaded","loadUser","usersStore","UserItem","item","general_Card","general_DetailRow","company","phone","website","hoc","componentDidMount","_ref2","store","general_PageMeta","general_Header","general_ErrorLayout","general_LoadingLayout","comments","postId","Post","isSubmitting","areCommentsLoading","commnetsLoadError","forceServer","_args","areCommentsLoaded","loadComments","commentsApi","_callee3","_context3","PostsStore","post","loadPost","postsStore","CommentItem","_this$props","match","history","headerProps","handleDelete","_handleDelete","asyncToGenerator","toString","replace","notify","show","postUi","comment","stores","PostItem","parseInt","user_Pagination","App","mobx_react_module","react_router_dom","notify_default","react_router","exact","render","HomePage","user_UserPage","PostPage","document","addEventListener","addTouchClass","e","documentElement","classList","add","removeEventListener","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.1353ce75.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction Card({ className, square, ...remainingProps }) {\n  return (\n    <div\n      className={classNames(\n        'card',\n        { 'is-square': square },\n        { [className]: className },\n\n      )}\n      {...remainingProps}\n    />\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  square: PropTypes.bool\n};\n\nexport default Card;\n\n","import React from 'react';\nimport classNames from 'classnames';\n\nfunction Icon({ name, className }) {\n  return React.createElement(\n    'i',\n    {\n      className: classNames('material-icons', { [className]: className }),\n      children: name\n    }\n  );\n}\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from './Icon';\n\nfunction DetailRow({ icon, title }) {\n  return (\n    <div className=\"detail-row\">\n      <div className=\"detail-row-icon\">\n        <Icon name={icon} />\n      </div>\n      <div className=\"detail-row-title\">\n       {title}\n      </div>\n    </div>\n  )\n}\n\nDetailRow.propTypes = {\n  icon: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default DetailRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction Tappable({\n  className,\n  component,\n  disabled,\n  ...remainingProps\n}) {\n  return React.createElement(\n    component || 'a',\n    {\n      className: classNames(\n        'tappable',\n        { disabled },\n        { [className]: className }\n      ),\n      ...remainingProps\n    }\n  )\n}\n\nTappable.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool\n};\n\nexport default Tappable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tappable from './Tappable';\n\nfunction ErrorLayout({ message, retryLabel, retryFn }) {\n  return (\n    <div className=\"layout\">\n      <div className=\"layout-content is-centered pad\">\n        <p>{message}</p>\n        {retryLabel && retryFn && (\n          <Tappable className=\"btn mgn-t\" onClick={retryFn}>\n            {retryLabel}\n          </Tappable>\n        )}\n      </div>\n    </div>\n  );\n}\n\nErrorLayout.defaultProps = {\n  retryLabel: 'Try Again'\n};\n\nErrorLayout.propTypes = {\n  message: PropTypes.string.isRequired,\n  retryFn: PropTypes.func,\n  retryLabel: PropTypes.string\n}\n\nexport default ErrorLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Icon from './Icon';\nimport Tappable from './Tappable';\n\nfunction Header({ title, backTo }) {\n  return (\n    <div className=\"layout-header\">\n      {backTo && (\n        <div className=\"layout-header-item\">\n          <Tappable\n            className=\"btn btn-small\"\n            component={Link}\n            to={backTo}\n          >\n            <Icon name=\"arrow_back\" />\n          </Tappable>\n        </div>\n      )}\n      <div className=\"layout-header-item layout-header-title\">\n        {title || 'Blog'}\n      </div>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  backTo: PropTypes.string,\n  title: PropTypes.string\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport forOwn from 'lodash/forOwn';\n\n/**\n * A higher order component for using React lifecycle hooks with\n * functional components.\n */\nconst lifecycle = hooks => BaseComponent => {\n  class WrapperComponent extends Component {\n    render() {\n      return <BaseComponent {...this.props} />;\n    }\n  }\n\n  forOwn(hooks, (v, k) => WrapperComponent.prototype[k] = v);\n\n  return WrapperComponent;\n};\n\nexport default lifecycle;\n","import React from 'react';\n\nfunction LoadingLayout() {\n  return (\n    <div className=\"layout\">\n      <div className=\"layout-content is-centered pad\">\n        <div className=\"spinner\" />\n      </div>\n    </div>\n  );\n}\n\nexport default LoadingLayout;\n","import { inject, observer } from 'mobx-react';\nimport compose from 'lodash/fp/compose';\n\nfunction mobxify(...stores) {\n  return compose(\n    inject(...stores),\n    observer\n  );\n}\n\nexport default mobxify;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst siteName = 'Blog';\n\nconst ogProperties = [\n  'site_name',\n  'title',\n  'description',\n  'image',\n  'url'\n];\n\nfunction PageMeta(metaProps) {\n  const meta = {\n    ...metaProps,\n    site_name: siteName\n  };\n\n  function titleTag() {\n    if (meta.title) {\n      return <title>{siteName} | {meta.title}</title>;\n    } else {\n      return null;\n    }\n  }\n\n  function descriptionTag() {\n    if (meta.description) {\n      return <meta name=\"description\" content={meta.description} />;\n    } else {\n      return null;\n    }\n  }\n\n  function ogTags() {\n    return ogProperties.map((property, index) => {\n      if (meta[property]) {\n        return (\n          <meta\n            key={index}\n            property={'og:' + property}\n            content={meta[property]}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n\n\n  return (\n    <Helmet>\n      {titleTag()}\n      {descriptionTag()}\n      {ogTags()}\n    </Helmet>\n  );\n}\n\nexport default PageMeta;\n","// This generally should go into a env file, its fine here as this a demo app\nexport default {\n  API_BASE_URL: 'https://jsonplaceholder.typicode.com',\n  PAGE_LIMIT: 10\n}\n","import map from 'lodash/map';\n\nimport config from '../utils/config';\n\nexport function searchParams(params) {\n  return map(params, (value, key) => `${key}=${value}`).join('&');\n}\n\n/**\n * Example usage:\n *\n *     apiEndpoint('/posts'); // Returns '<api-base-url>/posts'\n *\n * @param {string} path\n * @returns {string}\n */\nexport function apiEndpoint(path, params) {\n  return `${config.API_BASE_URL}${path}?${searchParams(params)}`;\n}\n\n/**\n * Parses JSON responses for easier consumption.\n *\n * The returned promise behaves as follows:\n * * For \"OK\" responses (2xx status codes)\n *   * If the body has JSON, it resolves to the JSON itself\n *   * If the body has no JSON (i.e. is empty), it resolves to null\n * * For all other responses, it rejects with an `Error` object that contains\n *   the following properties:\n *   * `isFromServer`: Set to true, indicating it is a server error\n *   * `response`: The complete response, for reference if required\n *   * `responseJson`: The response body pre-converted to JSON for convenience\n *\n * @param {Object} response\n * @returns {Promise<{}>}\n */\nexport async function parseJsonResponse(response) {\n  let json = null;\n  try {\n    json = await response.json();\n  } catch (e) {\n    // TODO Do something if response has no, or invalid JSON\n  }\n\n  if (response.ok) {\n    return json;\n  } else {\n    let error = new Error(response.statusText);\n    error.isFromServer = true;\n    error.response = response;\n    error.responseJson = json;\n\n    throw error;\n  }\n}\n\n/**\n * Performs an API request.\n *\n * @param {string} method - 'GET', 'POST' etc.\n * @param {string} path\n * @param {Object} [body]\n * @param {Object} [options] - `fetch` options other than `method` and `body`\n * @returns {Promise<{}>} As returned by {@link parseJsonResponse}\n */\nexport async function apiRequest(method, path, body = null, options = {}) {\n  let defaultHeaders = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n\n  let defaultOptions = { method };\n  if (body) {\n    defaultOptions['body'] = JSON.stringify(body);\n  }\n\n  const { headers, params, ...remainingOptions } = options;\n  const finalOptions = Object.assign(\n    defaultOptions,\n    { headers: Object.assign(defaultHeaders, headers) },\n    remainingOptions\n  );\n\n  const response = await fetch(apiEndpoint(path, params), finalOptions);\n\n  return parseJsonResponse(response);\n}\n","import config from '../utils/config';\nimport { apiRequest } from './utils';\n\nfunction getSkip(pageNum) {\n  return config.PAGE_LIMIT * (pageNum - 1);\n}\n\nfunction getPost(id) {\n  return apiRequest('GET', `/posts/${id}`);\n}\n\nfunction getPosts(userId, pageNum = 1) {\n  const skip = getSkip(pageNum);\n  const limit = config.PAGE_LIMIT;\n  const params = { skip, limit, userId };\n  return apiRequest('GET', '/posts', null, { params });\n}\n\nfunction deletePost(id) {\n  return apiRequest('DELETE', `/posts/${id}`);\n}\n\nexport default {\n  delete: deletePost,\n  get: getPost,\n  getList: getPosts\n}\n","import { action, computed, decorate, flow, observable } from 'mobx';\n\nimport postsApi from '../api/posts';\n\nclass User {\n  isLoading = false;\n  loadError = true;\n  needsReset = false;\n  pageNum = 1;\n  pages = observable.map({});\n\n  constructor(id, pageNum) {\n    this.id = id;\n    this.load(pageNum);\n  }\n\n  load = flow(function * (pageNum){\n    // Set below flag when you are sure that data has changed on server.\n    // For example after deleting a post.\n    if (this.needsReset) {\n      this.pages.clear();\n      this.needsReset = false;\n    }\n\n    this.pageNum = pageNum;\n    this.isLoading = true;\n    this.loadError = null;\n    try {\n      const json = yield postsApi.getList(this.id, pageNum);\n      this.pages.set(pageNum, json);\n      this.isLoading = false;\n    } catch (error) {\n      this.loadError = error;\n      this.isLoading = false;\n    }\n  });\n\n  setNeedsReset() {\n    this.needsReset = true;\n  }\n\n  get data() {\n    return this.pages.get(this.pageNum);\n  }\n\n  get isPageLoaded() {\n    return !!this.data;\n  }\n}\n\ndecorate(User, {\n  data: computed,\n  isPageLoaded: computed,\n  isLoading: observable,\n  loadError: observable,\n  needsReset: observable,\n  pageNum: observable,\n  setNeedsReset: action\n});\n\nexport default User;\n","import { apiRequest } from './utils';\n\nfunction getUsers() {\n  return apiRequest('GET', '/users');\n}\n\nexport default {\n  getList: getUsers\n}\n","import { action, computed, decorate, flow, observable } from 'mobx';\n\nimport User from '../models/user';\nimport usersApi from '../api/users';\n\nexport class UsersStore {\n  isLoading = false;\n  loadError = null;\n  list = null;\n  users = observable.map({});\n\n  load = flow(function * () {\n    this.isLoading = true;\n    this.loadError = null;\n\n    try {\n      const json = yield usersApi.getList();\n      this.list = json;\n      this.isLoading = false;\n    } catch (error) {\n      this.loadError = error;\n      this.isLoading = false;\n    }\n  });\n\n  loadUser(userId, pageNum) {\n    let user = this.users.get(userId);\n    if (user) {\n      user.load(pageNum);\n    } else {\n      user = new User(userId, pageNum);\n      this.users.set(userId, user);\n    }\n  }\n\n  get isLoaded() {\n    return !!this.list;\n  }\n}\n\ndecorate(UsersStore, {\n  isLoaded: computed,\n  isLoading: observable,\n  list: observable,\n  loadError: observable,\n  loadUser: action\n});\n\nconst usersStore = new UsersStore();\n\nexport default usersStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport compose from 'lodash/fp/compose';\n\nimport Card from '../../components/general/Card';\nimport DetailRow from '../../components/general/DetailRow';\nimport ErrorLayout from '../../components/general/ErrorLayout';\nimport Header from '../../components/general/Header';\nimport lifecycle from '../../components/hoc/lifecycle';\nimport LoadingLayout from '../../components/general/LoadingLayout';\nimport mobxify from '../../components/hoc/mobxify';\nimport PageMeta from '../../components/general/PageMeta';\nimport Tappable from '../../components/general/Tappable';\nimport { UsersStore } from '../../stores/usersStore';\n\nfunction UserItem({ item }) {\n  return (\n    <div className=\"col is-2-tablet is-3-desktop\">\n      <Card className=\"user-item\">\n        <p className=\"title mgn-b\">{item.name}</p>\n        <DetailRow icon=\"work\" title={item.company.name} />\n        <DetailRow icon=\"phone\" title={item.phone} />\n        <DetailRow icon=\"link\" title={item.website} />\n        <div className=\"user-actions mgn-t\">\n          <Tappable\n            className=\"btn btn-inverted btn-small\"\n            component={Link}\n            to={`/user/${item.id}`}\n          >\n            See Posts\n          </Tappable>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nfunction HomePage({ usersStore: store }) {\n  function usersUi() {\n    return (\n      <div className=\"layout\">\n        <div className=\"layout-content\">\n          <div className=\"row is-tiled\">\n            {store.list.map((user, index) => (\n              <UserItem\n                key={index}\n                item={user}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function ui() {\n    if (store.isLoaded) {\n      if (store.list.length === 0) {\n        return <ErrorLayout message=\"No users available\" />;\n      } else {\n        return usersUi();\n      }\n    } else if (store.isLoading) {\n      return <LoadingLayout />;\n    } else if (store.loadError) {\n      return (\n        <ErrorLayout\n          message=\"Failed to load users\"\n          retryFn={() => store.load()}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div className=\"layout\">\n      <PageMeta title=\"All Users\" />\n      <Header title=\"Blog | Users\" />\n      {ui()}\n    </div>\n  );\n}\n\nHomePage.propTypes = {\n  usersStore: PropTypes.instanceOf(UsersStore).isRequired\n};\n\nconst hoc = compose(\n  mobxify('usersStore'),\n  lifecycle({\n    componentDidMount() {\n      const { usersStore } = this.props;\n      usersStore.load();\n    }\n  }),\n  mobxify('usersStore'),\n);\n\nexport default hoc(HomePage);\n","import { apiRequest } from './utils';\n\nfunction getComments(postId) {\n  const params = { postId };\n  return apiRequest('GET', '/comments', null, { params });\n}\n\nexport default {\n  getList: getComments\n}\n","import { computed, decorate, flow, observable } from 'mobx';\n\nimport commentsApi from '../api/comments';\nimport postsApi from '../api/posts';\n\nclass Post {\n  comments = null;\n  data = null;\n  isLoading = false;\n  loadError = null;\n  isSubmitting = false;\n  areCommentsLoading = false;\n  commnetsLoadError = false;\n\n  constructor(id) {\n    this.id = id;\n    this.load();\n  }\n\n  // Use `forceServer = true` if you want to update cached data\n  load = flow(function * (forceServer = false){\n    if (!this.isLoaded || forceServer) {\n      this.isLoading = true;\n      this.loadError = null;\n      try {\n        const json = yield postsApi.get(this.id);\n        this.data = json;\n        this.isLoading = false;\n      } catch (error) {\n        this.loadError = error;\n        this.isLoading = false;\n      }\n    }\n\n    // If comments are already loaded then try to refresh them\n    if (this.areCommentsLoaded) this.loadComments();\n  });\n\n  loadComments = flow(function * () {\n    this.areCommentsLoading = true;\n    this.commnetsLoadError = null;\n    try {\n      const json = yield commentsApi.getList(this.id);\n      this.comments = json;\n      this.areCommentsLoading = false;\n    } catch (error) {\n      this.commnetsLoadError = error;\n      this.areCommentsLoading = false;\n    }\n  });\n\n  delete = flow(function * () {\n    this.isSubmitting = true;\n    try {\n      yield postsApi.delete(this.id);\n      this.isSubmitting = false;\n    } catch (error) {\n      this.isSubmitting = false;\n      throw error;\n    }\n  });\n\n  get areCommentsLoaded() {\n    return !!this.comments;\n  }\n\n  get isLoaded() {\n    return !!this.data;\n  }\n}\n\ndecorate(Post, {\n  areCommentsLoaded: computed,\n  areCommentsLoading: observable,\n  comments: observable,\n  commnetsLoadError: observable,\n  data: observable,\n  isLoaded: computed,\n  isLoading: observable,\n  isSubmitting: observable,\n  loadError: observable\n});\n\nexport default Post;\n","import { action, decorate, observable } from 'mobx';\n\nimport Post from '../models/post';\n\nexport class PostsStore {\n  posts = observable.map({});\n\n  loadPost(postId) {\n    let post = this.posts.get(postId);\n    if (post) {\n      post.load();\n    } else {\n      post = new Post(postId);\n      this.posts.set(postId, post);\n    }\n  }\n}\n\ndecorate(Post, {\n  loadPost: action\n});\n\nconst postsStore = new PostsStore();\n\nexport default postsStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { notify } from 'react-notify-toast';\nimport compose from 'lodash/fp/compose';\n\nimport Card from '../../components/general/Card';\nimport ErrorLayout from '../../components/general/ErrorLayout';\nimport Header from '../../components/general/Header';\nimport Icon from '../../components/general/Icon';\nimport lifecycle from '../../components/hoc/lifecycle';\nimport LoadingLayout from '../../components/general/LoadingLayout';\nimport mobxify from '../../components/hoc/mobxify';\nimport PageMeta from '../../components/general/PageMeta';\nimport Tappable from '../../components/general/Tappable';\nimport { PostsStore } from '../../stores/postsStore';\n\nfunction CommentItem({ item }) {\n  return (\n    <div className=\"col post-comment sep-b\">\n      <div className=\"post-comment-user\">{item.name}</div>\n      <div className=\"post-comment-body\">{item.body}</div>\n    </div>\n  );\n}\n\nfunction PostPage({\n  history,\n  match: { params },\n  postsStore: store,\n  usersStore\n}) {\n  const post = store.posts.get(params.postId);\n\n  let headerProps = { title: 'Post' };\n  if (post && post.isLoaded) {\n    headerProps = {\n      title: post.data.title,\n      backTo: `/user/${post.data.userId}`\n    };\n  }\n\n  async function handleDelete() {\n    try {\n      await post.delete();\n      const user = usersStore.users.get(post.data.userId.toString());\n      if (user) {\n        user.setNeedsReset();\n      }\n      history.replace(`/user/${post.data.userId}`);\n      notify.show('Post deleted successfully', 'success', 2000);\n    } catch (error) {\n      notify.show('Failed to delete post!', 'error', 2000);\n    }\n  }\n\n  function commentsUi() {\n    if (post.areCommentsLoaded) {\n      return (\n        <div className=\"row is-tiled\">\n          {post.comments.map((comment, index) => (\n            <CommentItem key={index} item={comment} />\n          ))}\n        </div>\n      );\n    } else if (post.areCommentsLoading) {\n      return <LoadingLayout />;\n    } else if (post.commnetsLoadError) {\n      return (\n        <ErrorLayout\n          message=\"Failed to load comments\"\n          retryFn={() => post.loadComments()}\n        />\n      )\n    } else {\n      return (\n        <ErrorLayout\n          message=\"Click below to load comments\"\n          retryLabel=\"Load Comments\"\n          retryFn={() => post.loadComments()}\n        />\n      );\n    }\n  }\n\n  function postUi() {\n    return (\n      <div className=\"layout-content post\">\n        <Card className=\"mgn-b\">\n          <div className=\"title mgn-b\">{post.data.title}</div>\n          <p className=\"mgn-b\">{post.data.body}</p>\n          <Tappable\n            className=\"tappable btn btn-danger btn-small\"\n            disabled={post.isSubmitting}\n            onClick={handleDelete}\n          >\n            <Icon className=\"mgn-r\" name=\"delete\" />\n            Delete Post\n          </Tappable>\n        </Card>\n        <Card>\n          <div className=\"title mgn-b\">Comments</div>\n          {commentsUi()}\n        </Card>\n      </div>\n    );\n  }\n\n  function ui() {\n    if (!post) {\n      return null;\n    } else if (post.isLoaded) {\n      return postUi();\n    } else if (post.isLoading) {\n      return <LoadingLayout />;\n    } else if (post.loadError) {\n      return (\n        <ErrorLayout\n          message=\"Failed to load blog post\"\n          retryFn={() => store.loadPost(params.postId)}\n        />\n      );\n    }\n  }\n\n  return (\n    <div className=\"layout\">\n      <PageMeta title=\"Post\" />\n      <Header {...headerProps} />\n      {ui()}\n    </div>\n  );\n}\n\nPostPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  postsStore: PropTypes.instanceOf(PostsStore)\n};\n\nconst hoc = compose(\n  mobxify('postsStore'),\n  lifecycle({\n    componentDidMount() {\n      const { postsStore: store, match: { params } } = this.props;\n      store.loadPost(params.postId);\n    }\n  }),\n  mobxify('postsStore', 'usersStore'),\n)\n\nexport default hoc(PostPage);\n","import postsStore from './postsStore';\nimport usersStore from './usersStore';\n\nexport default {\n  postsStore,\n  usersStore\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react';\n\nimport Icon from '../../components/general/Icon';\nimport Tappable from '../../components/general/Tappable';\nimport User from '../../models/user';\n\nfunction Pagination({ user }) {\n  if (user.data.length > 0) {\n    return (\n      <div className=\"pagination\">\n        <div className=\"pagination-item\">\n          <Tappable\n            className=\"btn btn-small btn-round\"\n            component={Link}\n            disabled={user.pageNum === 1}\n            to={`/user/${user.id}/${user.pageNum - 1}`}\n          >\n            <Icon name=\"chevron_left\" />\n          </Tappable>\n        </div>\n        <div className=\"pagination-item\">\n          <p>Page {user.pageNum}</p>\n        </div>\n        <div className=\"pagination-item\">\n          <Tappable\n            className=\"btn btn-small btn-round\"\n            component={Link}\n            to={`/user/${user.id}/${user.pageNum + 1}`}\n          >\n            <Icon name=\"chevron_right\" />\n          </Tappable>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nPagination.propTypes = {\n  user: PropTypes.instanceOf(User).isRequired\n};\n\nexport default observer(Pagination);\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport compose from 'lodash/fp/compose';\n\nimport Card from '../../components/general/Card';\nimport ErrorLayout from '../../components/general/ErrorLayout';\nimport Header from '../../components/general/Header';\nimport lifecycle from '../../components/hoc/lifecycle';\nimport LoadingLayout from '../../components/general/LoadingLayout';\nimport mobxify from '../../components/hoc/mobxify';\nimport PageMeta from '../../components/general/PageMeta';\nimport Pagination from './Pagination';\nimport { UsersStore } from '../../stores/usersStore';\nimport Tappable from '../../components/general/Tappable';\n\nfunction PostItem({ item }) {\n  return (\n    <div className=\"col\">\n      <Card>\n        <p className=\"title mgn-b\">{item.title}</p>\n        <Tappable\n          className=\"btn btn-inverted btn-small\"\n          component={Link}\n          to={`/post/${item.id}`}\n        >\n          Read More\n        </Tappable>\n      </Card>\n    </div>\n  );\n}\n\nfunction UserPage({ usersStore: store, match: { params } }) {\n  const pageNum = params.pageNum ? parseInt(params.pageNum, 10) : 1;\n  const user = store.users.get(params.userId);\n\n  function pageUi() {\n    if (user.data.length === 0) {\n      return <ErrorLayout message=\"No posts available\" />;\n    } else {\n      return (\n        <div className=\"layout-content\">\n          <div className=\"row is-tiled\">\n            {user.data.map((item, index) =>\n              <PostItem key={index} item={item} />)}\n          </div>\n          <Pagination user={user} />\n        </div>\n      );\n    }\n  }\n\n  function ui() {\n    if (!user) {\n      return null\n    } else if (user.isPageLoaded) {\n      // Placing the above condition before all other conditions shows content\n      // if already available and silently updates when new data is available.\n      return pageUi();\n    } else if (user.isLoading) {\n      return <LoadingLayout />;\n    } else if (user.loadError) {\n      return (\n        <ErrorLayout\n          message=\"Failed to load user posts\"\n          retryFn={() => user.load(pageNum)}\n        />\n      );\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <div className=\"layout\">\n      <PageMeta title=\"Posts\" />\n      <Header backTo=\"/home\" title=\"Blog | Posts\" />\n      {ui()}\n    </div>\n  );\n}\n\nUserPage.propTypes = {\n  match: PropTypes.object.isRequired,\n  usersStore: PropTypes.instanceOf(UsersStore).isRequired\n};\n\nconst hoc = compose(\n  mobxify('usersStore'),\n  lifecycle({\n    componentDidMount() {\n      const { usersStore: store, match: { params } } = this.props;\n      const pageNum = params.pageNum ? parseInt(params.pageNum, 10) : 1;\n      store.loadUser(params.userId, pageNum);\n    }\n  }),\n  mobxify('usersStore')\n)\n\nexport default hoc(UserPage);\n","import React from 'react';\nimport {\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom';\nimport { Provider } from 'mobx-react';\nimport Notifications from 'react-notify-toast';\n\nimport './App.scss';\n\nimport HomePage from './pages/home/HomePage';\nimport PostPage from './pages/post/PostPage';\nimport stores from './stores';\nimport UserPage from './pages/user/UserPage';\n\nfunction App() {\n  return (\n    <Provider {...stores}>\n      <Router>\n        <Notifications />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Redirect to=\"/home\" />}\n          />\n\n          <Route exact path=\"/home\" component={HomePage}/>\n          <Route\n            exact\n            path=\"/user/:userId/:pageNum?\"\n            render={({ match, ...remainingProps }) => (\n              <UserPage\n                key={`${match.params.userId}/${match.params.pageNum}`}\n                match={match}\n                {...remainingProps}\n              />\n            )}\n          />\n          <Route exact path=\"/post/:postId\" component={PostPage}/>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","export function addStickyHoverFix() {\n  document.addEventListener('touchstart', function addTouchClass(e) {\n    document.documentElement.classList.add('can-touch');\n    document.removeEventListener('touchstart', addTouchClass, false);\n  }, false);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { addStickyHoverFix } from './utils/stickyHover';\n\n// On mobiles/touch enabled devices `:hover` is not removed on touch release.\n// So we handle it using below function.\naddStickyHoverFix();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}